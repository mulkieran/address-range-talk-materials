#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass beamer
\begin_preamble
%\usetheme{Warsaw}
\usetheme{Boadilla}
% or ...

\usecolortheme{orchid}
\setbeamertemplate{footline}[text line]{} % makes the footer EMPTY

\setbeamercovered{transparent}
% or whatever (possibly just delete it)
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman times
\font_sans lmss
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
The Computation and Representation of Address Ranges
\end_layout

\begin_layout Subtitle
With an Introduction to the Python 
\family typewriter
justbytes
\family default
 Library
\end_layout

\begin_layout Author
Anne Mulhern
\end_layout

\begin_layout Institute
Red Hat, Inc.
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Audience
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Programmers who write code that must compute with and represent address
 ranges.
\end_layout

\begin_layout Itemize
If you have never needed to discover free space on a device\SpecialChar \ldots{}
then this talk
 is probably not for you.
\end_layout

\begin_layout Itemize
If you have never written code to display or calculate the size of a device\SpecialChar \ldots{}
then
 the second part of the talk is not for you.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Expectations
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
What this talk will include.
\end_layout

\begin_layout Itemize
A little bit of personal experience.
\end_layout

\begin_layout Itemize
Some math.
\end_layout

\begin_layout Itemize
Some opinion.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Introduction
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
The Topic
\end_layout

\begin_layout Standard
What is this talk about?
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
The Domain
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Allocating space on devices.
\end_layout

\begin_layout Itemize
Partitions
\end_layout

\begin_layout Itemize
Caches
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Not the Domain
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Where this is not an issue.
\end_layout

\begin_layout Itemize
Bandwidth
\end_layout

\begin_layout Itemize
Sales
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Not the Domain
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
When it is just a question of the amount being moved.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Gravel_and_aggregates_sorting_plant,_Alexandra_Dock,_Hull.jpg
	scale 20

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
The Domain
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Allocating address regions is a 
\emph on
layout
\emph default
 problem.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename geometry.jpg
	scale 10

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout FragileFrame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Real Example in the Domain (I)
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
lsblk
\begin_inset Foot
status open

\begin_layout Plain Layout
lsblk from util-linux 2.28
\end_layout

\end_inset


\end_layout

\begin_layout ExampleBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout
lsblk --ascii output
\end_layout

\end_inset


\end_layout

\begin_layout ExampleBlock
\begin_inset listings
lstparams "basicstyle={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
\end_layout

\begin_layout Plain Layout

sda      8:0    0 931.5G  0 disk 
\end_layout

\begin_layout Plain Layout

|-sda1   8:1    0   500M  0 part /boot
\end_layout

\begin_layout Plain Layout

|-sda2   8:2    0  15.7G  0 part [SWAP]
\end_layout

\begin_layout Plain Layout

|-sda3   8:3    0    50G  0 part /
\end_layout

\begin_layout Plain Layout

|-sda4   8:4    0     1K  0 part 
\end_layout

\begin_layout Plain Layout

`-sda5   8:5    0 865.3G  0 part /home
\end_layout

\begin_layout Plain Layout

sdb      8:16   1   7.3G  0 disk /run/media/mulhern/12CE-4D83
\end_layout

\begin_layout Plain Layout

sr0     11:0    1  1024M  0 rom 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Real Example in the Domain (II)
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
blivet-gui 
\begin_inset Foot
status open

\begin_layout Plain Layout
blivet-gui 1.0.7
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename blivet-gui.png
	scale 30

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Some Final Words (I)
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Last thoughts on amounts.
\end_layout

\begin_layout Standard
Dealing with amounts is hard 
\begin_inset Foot
status open

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset

Numerical Computing with IEEE Floating Point Arithmetic
\begin_inset Quotes erd
\end_inset

 by Michael L.
 Overton but also 
\begin_inset Quotes eld
\end_inset

The End of Error: Unum Computing
\begin_inset Quotes erd
\end_inset

 by John L.
 Gustafson.
\end_layout

\end_inset

.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Some Final Words (II)
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Use of SI units in marketing.
\end_layout

\begin_layout Standard
Comparing apples with slightly larger apples is a marketing trick.
 You can say you have more apples if you have smaller apples, but does your
 customer really get more applesauce?
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename figure_1.png
	scale 30

\end_inset


\end_layout

\end_deeper
\begin_layout Frame

\end_layout

\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Confession
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
This is a hard problem?!
\end_layout

\begin_layout Standard
Until I started working on software supporting block devices I would not
 have thought that this was a difficult subject.
 But it is.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Nomenclature
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
For purposes of discussion...
\end_layout

\begin_layout Description
Range The word I use when I mean the size of an allocated partition, or
 of my computer's RAM, or the block size on a disk.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Topics
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Problems to cover.
\end_layout

\begin_layout Description
Computation doing arithmetic with address range
\end_layout

\begin_layout Description
Display communicating address range values to a human reader
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Display
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Showing values to a human reader.
\end_layout

\begin_layout Standard
This is not a discussion of machine readable output.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Display
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Showing values to a human reader.
\end_layout

\begin_layout Standard
It is the business of the client to determine the 
\emph on
appearance
\emph default
 of the display; the library should return a 
\emph on
structure
\emph default
 representing a value to display to the client.
 How the structure is determined should be configurable
\begin_inset Foot
status open

\begin_layout Plain Layout

\family typewriter
justbytes-gui
\family default
 (
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://pypi.python.org/pypi/justbytes-gui/)
\end_layout

\end_inset

is a simple library for experimenting with the existing display options
 in the
\family typewriter
 justbytes
\family default
 library.
\end_layout

\end_inset

.
 
\begin_inset Graphics
	filename justbytesgui.png
	scale 25

\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Display Structure
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Relevant information about the display value.
\end_layout

\begin_layout Itemize
Display Value (D)
\end_layout

\begin_deeper
\begin_layout Itemize
Sign
\end_layout

\begin_layout Itemize
Integer Part
\end_layout

\begin_layout Itemize
Non-Repeating Fractional Part
\end_layout

\begin_layout Itemize
Repeating Fractional Part
\end_layout

\begin_layout Itemize
Base
\end_layout

\end_deeper
\begin_layout Itemize
Relation of D to actual value (V) in units (U)
\end_layout

\begin_layout Itemize
Units (U)
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Display Structure Examples
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Default choices for the display value for 
\begin_inset Formula $32\,\mathtt{GiB}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Configuration
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Structure
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Base
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sign
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
IEC
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
True
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Integer Part
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[3, 2]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exact Value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Non-Repeating Fractional Part
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Max Digits after Radix
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Repeating Fractional Part
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bounding Factor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Base
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rounding Method
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
half 0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Relation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
None
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GiB
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Display Structure Examples
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Consequences of choice of SI units for display of 
\begin_inset Formula $32\,\mathtt{GiB}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Configuration
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Structure
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Base
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sign
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
IEC
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Bold
status open

\begin_layout Plain Layout
False
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Integer Part
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Bold
status open

\begin_layout Plain Layout
[3, 4]
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exact Value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Non-Repeating Fractional Part
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Bold
status open

\begin_layout Plain Layout
[3, 6]
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Max Digits after Radix
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Repeating Fractional Part
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bounding Factor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Base
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rounding Method
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
half 0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Relation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Bold
status open

\begin_layout Plain Layout
>
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
None
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Bold
status open

\begin_layout Plain Layout
GB
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Display Structure Examples
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Consequences of some choices for display of 
\begin_inset Formula $32\,\mathtt{GiB}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Configuration
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Structure
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Base
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Bold
status open

\begin_layout Plain Layout
1000
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sign
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
IEC
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Bold
status open

\begin_layout Plain Layout
False
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Integer Part
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Bold
status open

\begin_layout Plain Layout
[34, 359]
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exact Value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Bold
status open

\begin_layout Plain Layout
True
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Non-Repeating
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Bold
status open

\begin_layout Plain Layout
[738,368]
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Max Digits after Radix
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Repeating
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bounding Factor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Base
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Bold
status open

\begin_layout Plain Layout
1000
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rounding Method
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
half 0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Relation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
=
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
None
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex Bold
status open

\begin_layout Plain Layout
MB
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Value Configuration
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle

\family typewriter
justbytes
\family default
' defaults for the 
\family typewriter
getStringInfo()
\family default
 method.
\end_layout

\begin_layout Standard
The computation of the display value is configurable, because it is not
 clear that there is just one best solution.
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Value Configuration
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Base
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
IEC
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
True
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exact Value
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Max Digits after Radix
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bounding Factor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rounding Method
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
half 0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
None
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset

Given IEC units, I would prefer base 1024.
 
\begin_inset Formula $32GiB+512B$
\end_inset

 is 
\begin_inset Quotes eld
\end_inset

> 32.00 GiB
\begin_inset Quotes erd
\end_inset

 with defaults; with base 1024 it is 
\begin_inset Quotes eld
\end_inset

32.0~0~512
\begin_inset Quotes erd
\end_inset

, i.e., precisely 32 GiB, 0 MiB, 0 KiB and 512 B.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Display Configuration
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle

\family typewriter
justbytes
\family default
' defaults for the 
\family typewriter
__str__
\family default
 method.
\end_layout

\begin_layout Standard
The display choices are configurable, because it is not clear that there
 is just one best solution.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Display Configuration
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Show Base Prefix
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Show Base Subscript
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Digits Separator
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
~
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Use Letters for Digits
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
True
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Capitalize Digit Letters
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Strip Trailing Zeros
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Strip Trailing Zeros if Exact
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
False
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Strip Trailing Zeros if Exact Whole Number
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
True
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Show Relation of Display Value to Actual
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
True
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
There is a lot more information in 
\begin_inset Quotes eld
\end_inset

> 1.00 TiB
\begin_inset Quotes erd
\end_inset

 than there is in 
\begin_inset Quotes eld
\end_inset

1.00 TiB
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_deeper
\begin_layout Frame

\end_layout

\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Always Prefer IEC to SI Units
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
IEC units better reflect the structure of memory
\begin_inset Foot
status open

\begin_layout Plain Layout
Would 
\begin_inset Formula $2^{8}$
\end_inset

have been better than 
\begin_inset Formula $2^{10}$
\end_inset

? Probably.
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
The structure of memory and the structure of addresses are based on powers
 of 2.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Display
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Summary
\begin_inset Foot
status open

\begin_layout Plain Layout
For technical reasons I ended up writing a separate library, 
\family typewriter
justbases
\family default
, to handle the computation of the representation of the numeric value;
 it has a GUI as well: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://pypi.python.org/pypi/justbases-gui/0.1.0
\end_layout

\end_inset

.
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
IEC units are 
\emph on
always
\emph default
 preferable to SI units.
\end_layout

\begin_layout Itemize
There is no single obvious best choice for certain display options.
\end_layout

\begin_layout Itemize
IEC units are most informative when coupled with base 1024, but that might
 be a hard sell.
\end_layout

\begin_layout Itemize
Showing relation of displayed value to actual value is a good idea.
\end_layout

\begin_layout Itemize
The client code decides the 
\emph on
appearance
\emph default
, but 
\family typewriter
justbytes
\family default
 decides the 
\emph on
value
\emph default
 of the display representation based on configuration options.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Computation
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Computing with address ranges.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Computation
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Rules for arithmetic operations.
\end_layout

\begin_layout Enumerate
Types are 
\emph on
always correct
\emph default
.
\end_layout

\begin_layout Enumerate
Results are 
\emph on
always
\emph default
 exact.
\end_layout

\begin_layout Enumerate
Operands are 
\emph on
never
\emph default
 float or Decimal.
\end_layout

\begin_layout Enumerate
Results of computations never yield ranges to any power but 1.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Types are 
\emph on
Always
\emph default
 Correct
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
The usual rules of high-school arithmetic are 
\emph on
strictly
\emph default
 followed
\begin_inset Foot
status open

\begin_layout Plain Layout
The formal type rules are stated in the 
\family typewriter
justbytes
\family default
 comments for the various operations.
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Just as 
\begin_inset Formula $1\,\mathrm{gallon}+\pi$
\end_inset

 is meaningless, so is 
\begin_inset Formula $32\,\mathrm{GiB}+64$
\end_inset

.
\begin_inset Foot
status open

\begin_layout Plain Layout
Some idiosyncracies of the Python libraries make it attractive to be able
 to add numbers to ranges, but this is not really a good idea.
 See 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://pythonhosted.org/justbytes/tutorial.html
\backslash
#using-the-additive-identity
\end_layout

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Just as 
\begin_inset Formula $\frac{1\,\mathrm{gallon}}{2}$
\end_inset

 is 
\begin_inset Formula $\frac{1}{2}\,\mathrm{gallon}$
\end_inset

, so 
\begin_inset Formula $\frac{32\,\mathrm{GiB}}{2}$
\end_inset

 is 
\begin_inset Formula $16\,\mathrm{GiB}$
\end_inset

.
 
\end_layout

\begin_layout Standard
Operations not allowed by these rules are called 
\emph on
nonsensical
\emph default
.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Results are 
\emph on
Always
\emph default
 Exact
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
There is no implicit rounding.
\end_layout

\begin_layout Standard
This means that 
\begin_inset Formula $\frac{1}{3}32\,\mathrm{GiB}=10\frac{2}{3}\,\mathrm{GiB}$
\end_inset

 which is 
\begin_inset Formula $11453246122\frac{2}{3}\,\mathrm{B}$
\end_inset

.
 The sole motivation is so that the ordinary rules of arithmetic are preserved,
 i.e., associativity, distributivity, and so forth hold when computing with
 ranges.
 The sole drawback is that if a whole number of bytes is sought for the
 result, as is typical, the result must be explicitly rounded.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Operands are 
\emph on
Never
\emph default
 float or Decimal
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Because most programmers do not have a good understanding of these types.
\end_layout

\begin_layout Standard
They tend to forget all sorts of things, like:
\end_layout

\begin_layout Itemize
Floating point numbers do not obey the usual laws of arithmetic.
\end_layout

\begin_layout Itemize
\begin_inset Formula $0.3\neq\frac{3}{10}$
\end_inset

.
\begin_inset Foot
status open

\begin_layout Plain Layout
It's actually 
\begin_inset Formula $\frac{5404319552844595}{18014398509481984}$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
There are a very large number of pairs of floats such that 
\begin_inset Formula $x\neq y$
\end_inset

 but 
\begin_inset Formula $\frac{x+y}{2}\in\left\{ x,y\right\} $
\end_inset

.
\end_layout

\begin_layout Itemize
Most of the problems with floats are true of Decimals at their precision
 limit
\begin_inset Foot
status open

\begin_layout Plain Layout
I think that the best use of Decimal is probably with decimal values with
 strict rules for rounding, like decimal currency.
\end_layout

\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Results of Computations 
\emph on
Never
\emph default
 Yield Ranges to any Power but 1.
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
No operation is allowed that would result in a Range with units that could
 not reasonably be used as a partition size.
\end_layout

\begin_layout Description
Nonsensical: 
\begin_inset Formula $n^{R}$
\end_inset

,
\begin_inset Formula $n+R$
\end_inset

, etc.
\end_layout

\begin_layout Description
Forbidden: 
\begin_inset Formula $R^{n}$
\end_inset

, 
\begin_inset Formula $RR$
\end_inset


\end_layout

\begin_layout Description
Permitted: 
\begin_inset Formula $R+R$
\end_inset

, 
\begin_inset Formula $nR$
\end_inset

, 
\begin_inset Formula $R/R$
\end_inset

, 
\begin_inset Formula $R<R$
\end_inset

, 
\begin_inset Formula $R\%R$
\end_inset

, etc.
 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Implementation
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
The internal representation of a Range is as a fractional quantity of bytes.
\end_layout

\begin_layout Standard
Given the restriction of Range result powers to 1, fractions are all that
 are necessary to achieve exact results, i.e., there is no requirement for
 symbolic computing.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Caveat
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Something to watch out for.
\end_layout

\begin_layout ExampleBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout
A simple example.
\end_layout

\end_inset


\end_layout

\begin_layout ExampleBlock
The fraction 
\begin_inset Formula $\frac{111}{11112121}$
\end_inset

has 13668 digits in the repeating part of its decimal representation.
 There is a noticeable delay before the value is correctly calculated.
\end_layout

\begin_layout Standard
Avoid requesting unbounded precision when displaying a range.
 This can result in a very time-consuming computation as the number of repeating
 digits is bounded by the magnitude of the denominator in the equivalent
 fraction.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Try It Out
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle

\family typewriter
Packages available.
\end_layout

\begin_layout Itemize

\family typewriter
justbytes
\family default
 is available in Fedora as python{2,3}-justbytes and from Pypi via pip.
\end_layout

\begin_layout Itemize

\family typewriter
justbytes
\family default
 tutorial available at 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://pythonhosted.org/justbytes/tutorial.html
\backslash
#
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\family typewriter
justbytes-gui
\family default
 is available only on Pypi and expected to remain so.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
What I Haven't Talked About
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Major things I haven't solved.
\end_layout

\begin_layout Itemize
Input of address ranges.
\end_layout

\begin_layout Itemize
Computing with address ranges and other units.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Input of Address Ranges (I)
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Getting an address range non-programatically.
\end_layout

\begin_layout Standard
I haven't really solved this problem to my satisfaction; this is why 
\family typewriter
justbytes-gui
\family default
 is just a library and not also an application.
 
\begin_inset Graphics
	filename justbytesgui.png
	scale 25

\end_inset


\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Input of Address Ranges (II)
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Some thoughts.
\end_layout

\begin_layout Itemize
Best to avoid it altogether, wherever possible.
\end_layout

\begin_layout Itemize
In many practical situations, it is better to express a range as a fraction
 of some related quantity, i.e., not as an absolute value.
\end_layout

\begin_layout Itemize
In a GUI, it is best to limit the amount of free-form text the user can
 enter.
 Certainly, choice of units should be handled by a widget.
\end_layout

\begin_layout Itemize
In a CLI or configuration file, there might be benefit to separating the
 numeric part from the units.
\end_layout

\begin_layout Itemize
Textual representations specific to floating point, e.g., 1e32, should be
 disallowed
\begin_inset Foot
status open

\begin_layout Plain Layout
That they are derived from scientific notation is not a justification for
 allowing them.
\end_layout

\end_inset

.
\end_layout

\begin_layout Itemize
Numbers with decimal points, e.g., 0.2, should be given their literal meaning,
 i.e., 
\begin_inset Formula $\frac{1}{5}$
\end_inset

 in this case, rather than their floating point interpretation, i.e., 
\begin_inset Formula $\frac{3602879701896397}{18014398509481984}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Computing with Address Ranges and Other Units (I)
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
The only types of arguments to Range operations are numerical types or Range
 objects.
\end_layout

\begin_layout Standard
There are perfectly good Python libraries
\begin_inset Foot
status open

\begin_layout Plain Layout
Pint: 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://pypi.python.org/pypi/Pint
\end_layout

\end_inset

, etc.
\end_layout

\end_inset

 for computing with units and verifying dimensionality, but they are all
 for physical quantities, i.e.
 not the domain.
 But it is generally the case that computations with address ranges are
 not actually unitless.
 With a more complete library, dimensionality can be checked.
\end_layout

\begin_layout ExampleBlock
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Example.
\end_layout

\end_inset


\end_layout

\begin_layout ExampleBlock
The sysfs size attribute for block devices is the number of sectors in the
 device.
 Converting this value to a range requires multiplying the size by 512,
 the number of bytes in the sector and converting the result.
 Better to use the actual units, like 
\begin_inset Formula $s\,\mathrm{blocks}\frac{512\,\mathrm{bytes}}{\mathrm{block}}=512s\,\mathrm{bytes}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Computing with Address Ranges and Other Units (II)
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Designing a library to satisfy this problem is a large undertaking with
 limited reward.
\end_layout

\begin_layout Itemize
The design of the library is not obvious.
\end_layout

\begin_layout Itemize
Such a library would help to find bugs, but it would require considerable
 investment to use properly.
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Thanks
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout FrameSubtitle
Any questions?
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\end_body
\end_document
